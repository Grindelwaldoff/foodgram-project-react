name: Foodgram-workflow

on: [push]

jobs:
  pep8_and_pytest:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.7
      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 pep8-naming flake8-broken-line flake8-return flake8-isort
          pip install -r backend/foodgram_back/requirements.txt
      - name: Pep8 check
        run: |
          python -m flake8
          cd backend/foodgram_back
          python manage.py test
  push_back_to_docker:
    name: Push back to DockerHub
    runs-on: ubuntu-latest
    needs: pep8_and_pytest
    if: github.ref == 'refs/heads/master'
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to Docker
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }} 
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Push to Docker Hub
        uses: docker/build-push-action@v2
        with:
          push: true
          file: ../backend/foodgram_back/Dockerfile
          tags: ${{ secrets.DOCKER_USERNAME }}/foodgram_back:latest
  # deploy_on_server:
  #   runs-on: ubuntu-latest
  #   needs: push_backend_to_docker
  #   if: github.ref == 'refs/heads/master'
  #   steps:
  #     - name: executing remote ssh commands to deploy
  #       uses: appleboy/ssh-action@master
  #       with:
  #         host: ${{ secrets.HOST }}
  #         username: ${{ secrets.USER }}
  #         key: ${{ secrets.SSH_KEY }}
  #         passphrase: null
  #         script: |
  #           cd infra
  #           sudo docker container stop $(sudo docker container ps -qa)
  #           sudo docker pull ${{ secrets.DOCKER_USERNAME }}/foodgram_back:latest
  #           touch .env
  #           echo DB_ENGINE=${{ secrets.DB_ENGINE }} >> .env
  #           echo DB_NAME=${{ secrets.DB_NAME }} >> .env
  #           echo POSTGRES_USER=${{ secrets.POSTGRES_USER }} >> .env
  #           echo POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }} >> .env
  #           echo DB_HOST=${{ secrets.DB_HOST }} >> . env
  #           echo DB_PORT=${{ secrets.DB_PORT }} >> .env
  #           sudo docker-compose up -d
  telegram:
    runs-on: ubuntu-latest
    needs: push_back_to_docker
    steps:
      - name: Send Message
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_TO }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          message: "${{ github.workflow }} запущенный ${{ github.actor }} в репозитории ${{ github.repository }} успешно выполнен! \n
            Комментарий: ${{ github.event.commits[0].message }} \n
            https://github.com/${{ github.repository }}/commit/${{github.sha}}"
